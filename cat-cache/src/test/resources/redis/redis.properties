# 连接池最大值
redis.pool.maxTotal=30
# 连接最大空闲值
redis.pool.maxIdle=10
# 连接最小空闲值
redis.pool.minIdle=5
# 连接超时时间
redis.pool.timeout=15000
# 一个pool可分配多少个jedis实例
redis.pool.maxActive=2048
redis.pool.numTestsPerEvictionRun=1024
redis.pool.timeBetweenEvictionRunsMillis=30000
redis.pool.minEvictableIdleTimeMillis=1800000
redis.pool.softMinEvictableTimeMillis=10000
# 当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException
redis.pool.maxWaitMillis=1500
# 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的
redis.pool.testOnBorrow=true
redis.pool.testWhileIdle=true
# 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
redis.pool.blockWhenExhausted=false
# 是否使用连接池管理
redis.pool.usePool=true


# 单节点配置
redis.host=127.0.0.1
redis.port=6379
redis.pass=123456


# 高可用配置
sentinel1.ip=192.168.1.200
sentinel1.port=63790
sentinel2.ip=192.168.1.201
sentinel2.port=63791
sentinel3.ip=192.168.1.202
sentinel3.port=63792
sentinel4.ip=192.168.1.203
sentinel4.port=63793


# 集群高可用配置(redis cluster)
redis.ip1=192.168.1.200
redis.port1=7110
redis.ip2=192.168.1.201
redis.port2=7111
redis.ip3=192.168.1.202
redis.port3=7112
redis.ip4=192.168.1.203
redis.port4=7113
redis.ip5=192.168.1.204
redis.port5=7114
redis.ip6=192.168.1.205
redis.port6=7115
redis.ip7=192.168.1.206
redis.port7=7116